---
- name: Set up .zshrc
  ansible.builtin.template:
    src: .gitconfig.j2
    dest: "{{ lookup('env', 'HOME') }}/{{ item | splitext | first }}"
    mode: u=rw,g=r,o=r
  loop:
    - .zshrc.j2
    - .aliases.j2
  notify: Reload .zshrc

- name: Create .zsh folder if it does not exist
  ansible.builtin.file:
    path: "{{ lookup('env', 'HOME') }}/.zsh"
    state: directory
    mode: u=xrw,g=xr,o=x

- name: Check if .zsh folder is a git repo
  ansible.builtin.stat:
    path: "{{ lookup('env', 'HOME') }}/.zsh/.git"
  register: zsh_git

- name: Setup ohmyzsh git remote, if .zsh is not initialized
  ansible.builtin.command: git clone --no-checkout https://github.com/ohmyzsh/ohmyzsh . # noqa command-instead-of-module
  args:
    chdir: "{{ lookup('env', 'HOME') }}/.zsh"
    creates: "{{ lookup('env', 'HOME') }}/.zsh/.git"

- name: Limit the clone to ohmyzsh plugins only, if they are not installed
  ansible.builtin.command: git sparse-checkout set --no-cone /plugins /lib # noqa command-instead-of-module
  args:
    chdir: "{{ lookup('env', 'HOME') }}/.zsh"
    creates: "{{ lookup('env', 'HOME') }}/.zsh/.git/info/sparse-checkout"

- name: Checkout ohmyzsh plugins
  ansible.builtin.command: git checkout # noqa command-instead-of-module
  args:
    chdir: "{{ lookup('env', 'HOME') }}/.zsh"
    creates: "{{ lookup('env', 'HOME') }}/.zsh/plugins"
