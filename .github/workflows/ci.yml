---
name: CI
"on":
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: "0 0 * * 5"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase
        uses: actions/checkout@v3

      - name: Set up Python 3
        uses: actions/setup-python@v3

      - name: Install test dependencies
        run: pip3 install yamllint ansible ansible-lint

      - name: Lint code
        uses: pre-commit/action@v3.0.0
  integration-test:
    name: Integration test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          - macos-13

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2

      - name: Set up Python 3
        uses: actions/setup-python@v3

      - name: Install test dependencies
        run: pip3 install yamllint ansible ansible-lint

      - name: Uninstall GitHub Actions' built-in Homebrew.
        run: |
          if which brew > /dev/null; then
            /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/uninstall.sh)"
          fi

      - name: Uninstall GitHub Actions' built-in browser installs.
        run: |
          sudo rm -rf /Applications/Google\ Chrome.app
          sudo rm -rf /usr/local/bin/chromedriver
          sudo rm -rf /Applications/Firefox.app
          sudo rm -rf /usr/local/bin/firefox

      - name: Install test dependencies.
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install --user ansible

      - name: Set up the test environment.
        run: |
          ansible-galaxy install -r requirements.yml

      - name: Test the playbook's syntax.
        run: ansible-playbook --inventory ./localhost --syntax-check test.yml

      - name: Test the playbook.
        run: ansible-playbook --inventory ./localhost test.yml
        env:
          ANSIBLE_FORCE_COLOR: "1"

      - name: Idempotence check.
        run: |
          idempotence=$(mktemp)
          ansible-playbook --inventory ./localhost test.yml | tee -a ${idempotence}
          tail ${idempotence} | grep -q 'changed=0.*failed=0' && (echo 'Idempotence test: pass' && exit 0) || (echo 'Idempotence test: fail' && exit 1)
        env:
          ANSIBLE_FORCE_COLOR: "1"
