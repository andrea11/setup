---
name: CI
on:
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: 0 0 15 * *

jobs:
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Check out the codebase
  #       uses: actions/checkout@v3
  # - name: Set up Python 3
  #   uses: actions/setup-python@v3
  # - name: Install test dependencies
  #   run: pip3 install yamllint ansible ansible-lint
  # - name: Lint code
  #   uses: pre-commit/action@v3.0.0
  # - name: Test the playbook's syntax.
  #   run: ansible-playbook --inventory ./localhost --syntax-check main.yml
  customize_dock_test:
    name: Role customize_dock test
    runs-on: macos-latest
    steps:
      - run: |
          ls -la .
          ls -la ./.github/
          ls -la ./.github/workflows/
          ls -la ./.github/actions/
          ls -la ./.github/actions/setup-environment.yml
          echo $PWD
  #     - name: Check out the codebase
  #       uses: actions/checkout@v3
  #     - uses: ./.github/actions/setup-environment
  #     - name: Test the playbook.
  #       run:
  #         ansible-playbook --inventory ./localhost roles/customize_dock/test.yml
  #       env:
  #         ANSIBLE_FORCE_COLOR: "1"
  # setup_git_test:
  #   name: Role setup_git test
  #   runs-on: macos-latest
  #   steps:
  #     - name: Check out the codebase
  #       uses: actions/checkout@v3
  #     - uses: ./.github/actions/setup-environment
  #     - name: Test the playbook.
  #       run: ansible-playbook --inventory ./localhost roles/setup_git/test.yml
  #       env:
  #         ANSIBLE_FORCE_COLOR: "1"
  # setup_ssh_test:
  #   name: Role setup_ssh test
  #   runs-on: macos-latest
  #   steps:
  #     - name: Check out the codebase
  #       uses: actions/checkout@v3
  #     - uses: ./.github/actions/setup-environment
  #     - name: Test the playbook.
  #       run: ansible-playbook --inventory ./localhost roles/setup_ssh/test.yml
  #       env:
  #         ANSIBLE_FORCE_COLOR: "1"
  # install_applications_test:
  #   name: Role install_applications test
  #   runs-on: macos-latest
  #   steps:
  #     - name: Check out the codebase
  #       uses: actions/checkout@v3
  #     - uses: ./.github/actions/setup-environment
  #     - name: Test the playbook.
  #       run:
  #         ansible-playbook --inventory ./localhost
  #         roles/install_applications/test.yml
  #       env:
  #         ANSIBLE_FORCE_COLOR: "1"
  # setup_java_test:
  #   name: Role setup_java test
  #   runs-on: macos-latest
  #   steps:
  #     - name: Check out the codebase
  #       uses: actions/checkout@v3
  #     - uses: ./.github/actions/setup-environment
  #     - name: Test the playbook.
  #       run: ansible-playbook --inventory ./localhost roles/setup_java/test.yml
  #       env:
  #         ANSIBLE_FORCE_COLOR: "1"
  # setup_zsh_test:
  #   name: Role setup_zsh test
  #   runs-on: macos-latest
  #   steps:
  #     - name: Check out the codebase
  #       uses: actions/checkout@v3
  #     - uses: ./.github/actions/setup-environment
  #     - name: Test the playbook.
  #       run: ansible-playbook --inventory ./localhost roles/setup_zsh/test.yml
  #       env:
  #         ANSIBLE_FORCE_COLOR: "1"
  # launch_applications_first_time_test:
  #   name: Role launch_applications_first_time test
  #   runs-on: macos-latest
  #   steps:
  #     - name: Check out the codebase
  #       uses: actions/checkout@v3
  #     - uses: ./.github/actions/setup-environment
  #     - name: Test the playbook.
  #       run:
  #         ansible-playbook --inventory ./localhost
  #         roles/launch_applications_first_time/test.yml
  #       env:
  #         ANSIBLE_FORCE_COLOR: "1"
  # setup_node_test:
  #   name: Role setup_node test
  #   runs-on: macos-latest
  #   steps:
  #     - name: Check out the codebase
  #       uses: actions/checkout@v3
  #     - uses: ./.github/actions/setup-environment
  #     - name: Test the playbook.
  #       run: ansible-playbook --inventory ./localhost roles/setup_node/test.yml
  #       env:
  #         ANSIBLE_FORCE_COLOR: "1"
  # setup_finicky_test:
  #   name: Role setup_finicky test
  #   runs-on: macos-latest
  #   steps:
  #     - name: Check out the codebase
  #       uses: actions/checkout@v3
  #     - uses: ./.github/actions/setup-environment
  #     - name: Test the playbook.
  #       run:
  #         ansible-playbook --inventory ./localhost roles/setup_finicky/test.yml
  #       env:
  #         ANSIBLE_FORCE_COLOR: "1"
  # setup_python_test:
  #   name: Role setup_python test
  #   runs-on: macos-latest
  #   steps:
  #     - name: Check out the codebase
  #       uses: actions/checkout@v3
  #     - uses: ./.github/actions/setup-environment
  #     - name: Test the playbook.
  #       run:
  #         ansible-playbook --inventory ./localhost roles/setup_python/test.yml
  #       env:
  #         ANSIBLE_FORCE_COLOR: "1"
  # integration-test:
  #   name: Integration test
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os:
  #         - macos-latest
  #         - macos-13
  #   steps:
  #     - name: Check out the codebase.
  #       uses: actions/checkout@v3
  #     - u./ses: .github/actions/setup
  #     - name: Test the playbook.
  #       run: ansible-playbook --inventory ./localhost test.yml
  #       env:
  #         ANSIBLE_FORCE_COLOR: "1"
  #     - name: Idempotence check.
  #       run: |
  #         idempotence=$(mktemp)
  #         ansible-playbook --inventory ./localhost test.yml | tee -a ${idempotence}
  #         tail ${idempotence} | grep -q 'changed=0.*failed=0' && (echo 'Idempotence test: pass' && exit 0) || (echo 'Idempotence test: fail' && exit 1)
  #       env:
  #         ANSIBLE_FORCE_COLOR: "1"
